import unicodedata2

unicode_blocks = {
    "InBasic_Latin": ( int("0000", 16), int("007F", 16) ),
    "InLatin-1_Supplement": ( int("0080", 16), int("00FF", 16) ),
    "InLatin_Extended-A": ( int("0100", 16), int("017F", 16) ),
    "InLatin_Extended-B": ( int("0180", 16), int("024F", 16) ),
    "InIPA_Extensions": ( int("0250", 16), int("02AF", 16) ),
    "InSpacing_Modifier_Letters": ( int("02B0", 16), int("02FF", 16) ),
    "InCombining_Diacritical_Marks": ( int("0300", 16), int("036F", 16) ),
    "InGreek_and_Coptic": ( int("0370", 16), int("03FF", 16) ),
    "InCyrillic": ( int("0400", 16), int("04FF", 16) ),
    "InCyrillic_Supplementary": ( int("0500", 16), int("052F", 16) ),
    "InArmenian": ( int("0530", 16), int("058F", 16) ),
    "InHebrew": ( int("0590", 16), int("05FF", 16) ),
    "InArabic": ( int("0600", 16), int("06FF", 16) ),
    "InSyriac": ( int("0700", 16), int("074F", 16) ),
    "InThaana": ( int("0780", 16), int("07BF", 16) ),
    "InDevanagari": ( int("0900", 16), int("097F", 16) ),
    "InBengali": ( int("0980", 16), int("09FF", 16) ),
    "InGurmukhi": ( int("0A00", 16), int("0A7F", 16) ),
    "InGujarati": ( int("0A80", 16), int("0AFF", 16) ),
    "InOriya": ( int("0B00", 16), int("0B7F", 16) ),
    "InTamil": ( int("0B80", 16), int("0BFF", 16) ),
    "InTelugu": ( int("0C00", 16), int("0C7F", 16) ),
    "InKannada": ( int("0C80", 16), int("0CFF", 16) ),
    "InMalayalam": ( int("0D00", 16), int("0D7F", 16) ),
    "InSinhala": ( int("0D80", 16), int("0DFF", 16) ),
    "InThai": ( int("0E00", 16), int("0E7F", 16) ),
    "InLao": ( int("0E80", 16), int("0EFF", 16) ),
    "InTibetan": ( int("0F00", 16), int("0FFF", 16) ),
    "InMyanmar": ( int("1000", 16), int("109F", 16) ),
    "InGeorgian": ( int("10A0", 16), int("10FF", 16) ),
    "InHangul_Jamo": ( int("1100", 16), int("11FF", 16) ),
    "InEthiopic": ( int("1200", 16), int("137F", 16) ),
    "InCherokee": ( int("13A0", 16), int("13FF", 16) ),
    "InUnified_Canadian_Aboriginal_Syllabics": ( int("1400", 16), int("167F", 16) ),
    "InOgham": ( int("1680", 16), int("169F", 16) ),
    "InRunic": ( int("16A0", 16), int("16FF", 16) ),
    "InTagalog": ( int("1700", 16), int("171F", 16) ),
    "InHanunoo": ( int("1720", 16), int("173F", 16) ),
    "InBuhid": ( int("1740", 16), int("175F", 16) ),
    "InTagbanwa": ( int("1760", 16), int("177F", 16) ),
    "InKhmer": ( int("1780", 16), int("17FF", 16) ),
    "InMongolian": ( int("1800", 16), int("18AF", 16) ),
    "InLimbu": ( int("1900", 16), int("194F", 16) ),
    "InTai_Le": ( int("1950", 16), int("197F", 16) ),
    "InKhmer_Symbols": ( int("19E0", 16), int("19FF", 16) ),
    "InPhonetic_Extensions": ( int("1D00", 16), int("1D7F", 16) ),
    "InLatin_Extended_Additional": ( int("1E00", 16), int("1EFF", 16) ),
    "InGreek_Extended": ( int("1F00", 16), int("1FFF", 16) ),
    "InGeneral_Punctuation": ( int("2000", 16), int("206F", 16) ),
    "InSuperscripts_and_Subscripts": ( int("2070", 16), int("209F", 16) ),
    "InCurrency_Symbols": ( int("20A0", 16), int("20CF", 16) ),
    "InCombining_Diacritical_Marks_for_Symbols": ( int("20D0", 16), int("20FF", 16) ),
    "InLetterlike_Symbols": ( int("2100", 16), int("214F", 16) ),
    "InNumber_Forms": ( int("2150", 16), int("218F", 16) ),
    "InArrows": ( int("2190", 16), int("21FF", 16) ),
    "InMathematical_Operators": ( int("2200", 16), int("22FF", 16) ),
    "InMiscellaneous_Technical": ( int("2300", 16), int("23FF", 16) ),
    "InControl_Pictures": ( int("2400", 16), int("243F", 16) ),
    "InOptical_Character_Recognition": ( int("2440", 16), int("245F", 16) ),
    "InEnclosed_Alphanumerics": ( int("2460", 16), int("24FF", 16) ),
    "InBox_Drawing": ( int("2500", 16), int("257F", 16) ),
    "InBlock_Elements": ( int("2580", 16), int("259F", 16) ),
    "InGeometric_Shapes": ( int("25A0", 16), int("25FF", 16) ),
    "InMiscellaneous_Symbols": ( int("2600", 16), int("26FF", 16) ),
    "InDingbats": ( int("2700", 16), int("27BF", 16) ),
    "InMiscellaneous_Mathematical_Symbols-A": ( int("27C0", 16), int("27EF", 16) ),
    "InSupplemental_Arrows-A": ( int("27F0", 16), int("27FF", 16) ),
    "InBraille_Patterns": ( int("2800", 16), int("28FF", 16) ),
    "InSupplemental_Arrows-B": ( int("2900", 16), int("297F", 16) ),
    "InMiscellaneous_Mathematical_Symbols-B": ( int("2980", 16), int("29FF", 16) ),
    "InSupplemental_Mathematical_Operators": ( int("2A00", 16), int("2AFF", 16) ),
    "InMiscellaneous_Symbols_and_Arrows": ( int("2B00", 16), int("2BFF", 16) ),
    "InCJK_Radicals_Supplement": ( int("2E80", 16), int("2EFF", 16) ),
    "InKangxi_Radicals": ( int("2F00", 16), int("2FDF", 16) ),
    "InIdeographic_Description_Characters": ( int("2FF0", 16), int("2FFF", 16) ),
    "InCJK_Symbols_and_Punctuation": ( int("3000", 16), int("303F", 16) ),
    "InHiragana": ( int("3040", 16), int("309F", 16) ),
    "InKatakana": ( int("30A0", 16), int("30FF", 16) ),
    "InBopomofo": ( int("3100", 16), int("312F", 16) ),
    "InHangul_Compatibility_Jamo": ( int("3130", 16), int("318F", 16) ),
    "InKanbun": ( int("3190", 16), int("319F", 16) ),
    "InBopomofo_Extended": ( int("31A0", 16), int("31BF", 16) ),
    "InKatakana_Phonetic_Extensions": ( int("31F0", 16), int("31FF", 16) ),
    "InEnclosed_CJK_Letters_and_Months": ( int("3200", 16), int("32FF", 16) ),
    "InCJK_Compatibility": ( int("3300", 16), int("33FF", 16) ),
    "InCJK_Unified_Ideographs_Extension_A": ( int("3400", 16), int("4DBF", 16) ),
    "InYijing_Hexagram_Symbols": ( int("4DC0", 16), int("4DFF", 16) ),
    "InCJK_Unified_Ideographs": ( int("4E00", 16), int("9FFF", 16) ),
    "InYi_Syllables": ( int("A000", 16), int("A48F", 16) ),
    "InYi_Radicals": ( int("A490", 16), int("A4CF", 16) ),
    "InHangul_Syllables": ( int("AC00", 16), int("D7AF", 16) ),
    "InHigh_Surrogates": ( int("D800", 16), int("DB7F", 16) ),
    "InHigh_Private_Use_Surrogates": ( int("DB80", 16), int("DBFF", 16) ),
    "InLow_Surrogates": ( int("DC00", 16), int("DFFF", 16) ),
    "InPrivate_Use_Area": ( int("E000", 16), int("F8FF", 16) ),
    "InCJK_Compatibility_Ideographs": ( int("F900", 16), int("FAFF", 16) ),
    "InAlphabetic_Presentation_Forms": ( int("FB00", 16), int("FB4F", 16) ),
    "InArabic_Presentation_Forms-A": ( int("FB50", 16), int("FDFF", 16) ),
    "InVariation_Selectors": ( int("FE00", 16), int("FE0F", 16) ),
    "InCombining_Half_Marks": ( int("FE20", 16), int("FE2F", 16) ),
    "InCJK_Compatibility_Forms": ( int("FE30", 16), int("FE4F", 16) ),
    "InSmall_Form_Variants": ( int("FE50", 16), int("FE6F", 16) ),
    "InArabic_Presentation_Forms-B": ( int("FE70", 16), int("FEFF", 16) ),
    "InHalfwidth_and_Fullwidth_Forms": ( int("FF00", 16), int("FFEF", 16) ),
    "InSpecials": ( int("FFF0", 16), int("FFFF", 16) )
}

long_to_short_category = {
    "Letter":"L",
    "Lowercase_Letter":"Ll",
    "Uppercase_Letter":"Lu",
    "Titlecase_Letter":"Lt",
    "Cased_Letter":"L&",
    "Modifier_Letter":"Lm",
    "Other_Letter":"Lo",
    "Mark":"M",
    "Non_Spacing_Mark":"Mn",
    "Spacing_Combining_Mark":"Mc",
    "Enclosing_Mark":"Me",
    "Separator":"Z",
    "Space_Separator":"Zs",
    "Line_Separator":"Zl",
    "Paragraph_Separator":"Zp",
    "Symbol":"S",
    "Math_Symbol":"Sm",
    "Currency_Symbol":"Sc",
    "Modifier_Symbol":"Sk",
    "Other_Symbol":"So",
    "Number":"N",
    "Decimal_Digit_Number":"Nd",
    "Letter_Number":"Nl",
    "Other_Number":"No",
    "Punctuation":"P",
    "Dash_Punctuation":"Pd",
    "Open_Punctuation":"Ps",
    "Close_Punctuation":"Pe",
    "Initial_Punctuation":"Pi",
    "Final_Punctuation":"Pf",
    "Connector_Punctuation":"Pc",
    "Other_Punctuation":"Po",
    "Other":"C",
    "Control":"Cc",
    "Format":"Cf",
    "Private_Use":"Co",
    "Surrogate":"Cs",
    "Unassigned":"Cn",
}

category_hierarchy = {
    "L":	["Ll", "Lu", "Lt", "L&", "Lm", "Lo"],
    "M":    ["Mn", "Mc", "Me"],
    "N":	["Nd", "Nl", "No"],
    "P":	["Pd", "Ps", "Pe", "Pi", "Pf", "Pc", "Po"],
    "S":	["Sm", "Sc", "Sk", "So"],
    "Z":	["Zs", "Zl", "Zp"]
}

name_to_type = {}
for key in unicode_blocks.keys():
    name_to_type[key] = "block"
for key, value in long_to_short_category.items():
    if len(value) == 1:
        name_to_type[value] = "short category"
        name_to_type[key] = "long category"
    else:
        name_to_type[value] = "short subcategory"
        name_to_type[key] = "long subcategory"
for script in unicodedata2.script_data["names"]:
    name_to_type[script] = "script"

